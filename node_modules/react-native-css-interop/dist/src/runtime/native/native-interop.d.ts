import { Effect, Observable } from "../observable";
import { ExtractedAnimations, ExtractedTransition, InteropComponentConfig, ReactComponent, StyleDeclaration, StyleRule } from "../../types";
import type { SharedValue } from "react-native-reanimated";
export type ComponentState = {
    refs: {
        props: Record<string, any> | null;
        containers: Record<string, ComponentState>;
        variables: Record<string, any>;
    };
    interaction: {
        active?: Observable<boolean>;
        hover?: Observable<boolean>;
        focus?: Observable<boolean>;
        layout?: Observable<[number, number]>;
    };
    rerender(): void;
    upgrades: {
        animated?: number;
        variables?: number;
        containers?: number;
        pressable?: number;
        canWarn?: boolean;
    };
    propStates: ReturnType<typeof createPropState>[];
};
export type PropState = InteropComponentConfig & {
    upgrades: ComponentState["upgrades"];
    refs: ComponentState["refs"];
    interaction: ComponentState["interaction"];
    testID?: string;
    props?: Record<string, any>;
    classNames?: string;
    inlineStyles?: any;
    tracking: {
        inlineStyles?: any;
        index: number;
        rules: StyleRule[];
        changed: boolean;
    };
    declarations?: StyleDeclaration[];
    importantDeclarations?: StyleDeclaration[];
    variables?: Record<string, any>;
    variableTracking?: Map<string, any>;
    containerNames?: false | string[];
    containerTracking?: Map<string, any>;
    declarationEffect: Effect;
    styleEffect: Effect;
    animation?: Required<ExtractedAnimations> & {
        waitingLayout: boolean;
    };
    transition?: Required<ExtractedTransition>;
    sharedValues?: Map<string, SharedValue<any>>;
    animationNames?: Set<string>;
};
export declare function interop(baseComponent: ReactComponent<any>, configs: InteropComponentConfig[], props: Record<string, any> | null, ref: any): any;
declare function createPropState(componentState: ComponentState, config: InteropComponentConfig): PropState;
export declare function specificityCompare(o1?: object | StyleRule | null, o2?: object | StyleRule | null): number;
export {};
