import { render as tlRender } from "@testing-library/react-native";
import { CssToReactNativeRuntimeOptions, EnableCssInteropOptions, ReactComponent, Style, CssInteropGeneratedProps } from "../types";
import "../runtime/components";
import { ComponentProps, ComponentType } from "react";
export * from "../types";
export { warnings } from "../runtime/native/globals";
declare global {
    namespace jest {
        interface Matchers<R> {
            toHaveStyle(style?: Style | Style[]): R;
            toHaveAnimatedStyle(style?: Style): R;
        }
    }
}
export declare const renderJSX: import("../types").JSXFunction;
export declare const render: typeof tlRender;
export declare const createMockComponent: <const T extends ReactComponent<any>, const M extends EnableCssInteropOptions<any> = {
    className: "style";
}>(Component: T, mapping?: M) => ComponentType<ComponentProps<T> & CssInteropGeneratedProps<M>> & {
    mock: any;
};
export declare const createRemappedComponent: <const T extends ReactComponent<any>, const M extends EnableCssInteropOptions<any> = {
    className: "style";
}>(Component: T, mapping?: M) => ComponentType<ComponentProps<T> & CssInteropGeneratedProps<M>>;
export declare const resetStyles: () => void;
export declare const resetComponents: () => void;
export declare function registerCSS(css: string, options?: CssToReactNativeRuntimeOptions): void;
export declare function revealStyles(obj: any): any;
