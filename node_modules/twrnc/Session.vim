let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/jaredh159/twrnc/twrnc
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +29 src/resolve/color.ts
badd +225 src/helpers.ts
badd +13 src/resolve/font-family.ts
badd +320 src/__tests__/tw.spec.ts
badd +258 readme.md
badd +17 src/__tests__/memo-buster.spec.tsx
badd +31 src/__tests__/font-size.spec.ts
badd +45 src/resolve/font-size.ts
badd +381 src/UtilityParser.ts
badd +1 src/__tests__/margin.spec.ts
badd +23 src/resolve/spacing.ts
badd +38 src/__tests__/colors.spec.ts
badd +6 src/resolve/line-height.ts
badd +0 ~/jaredh159/twrnc/twrnc
badd +58 src/types.ts
badd +5 src/tw-config.ts
badd +29 src/__tests__/prefix-match.spec.ts
badd +18 src/create.ts
badd +11 changelog.md
argglobal
%argdel
$argadd ~/jaredh159/twrnc/twrnc
edit src/__tests__/prefix-match.spec.ts
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt changelog.md
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=19
setlocal fen
10
normal! zo
let s:l = 29 - ((16 * winheight(0) + 21) / 43)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 29
normal! 015|
lcd ~/jaredh159/twrnc/twrnc
wincmd w
argglobal
if bufexists(fnamemodify("~/jaredh159/twrnc/twrnc/src/helpers.ts", ":p")) | buffer ~/jaredh159/twrnc/twrnc/src/helpers.ts | else | edit ~/jaredh159/twrnc/twrnc/src/helpers.ts | endif
if &buftype ==# 'terminal'
  silent file ~/jaredh159/twrnc/twrnc/src/helpers.ts
endif
balt ~/jaredh159/twrnc/twrnc/src/create.ts
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=19
setlocal fen
231
normal! zo
let s:l = 225 - ((31 * winheight(0) + 21) / 43)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 225
normal! 0
lcd ~/jaredh159/twrnc/twrnc
wincmd w
2wincmd w
wincmd =
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
let g:this_session = v:this_session
let g:this_obsession = v:this_session
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
